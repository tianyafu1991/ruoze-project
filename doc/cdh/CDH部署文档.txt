一、购买机器
阿里云购买3台云主机
按量付费 2Core 16G Centos7.2

Fu2009!123

准备安装包
JDK
MySQL
MySQL JDBC 包
CDH tar包
CDH parcel包 3个
Azkaban安装包


二、配置hosts

[root@ruozedata001 ~]# echo -e '172.25.255.136 ruozedata001' >>/etc/hosts
[root@ruozedata001 ~]# echo -e '172.25.255.134 ruozedata002' >>/etc/hosts
[root@ruozedata001 ~]# echo -e '172.25.255.135 ruozedata003' >>/etc/hosts
[root@ruozedata001 ~]# cat /etc/hosts


三、配置信任关系（部署CDH的话这一步非必须，只是为了后续机器间scp文件方便）
[root@ruozedata001 ~]# ssh-keygen
[root@ruozedata002 ~]# scp ~/.ssh/id_rsa.pub  root@ruozedata001:/root/.ssh/id_rsa.pub2
[root@ruozedata003 ~]# scp ~/.ssh/id_rsa.pub  root@ruozedata001:/root/.ssh/id_rsa.pub3

[root@ruozedata001 ~]# cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
[root@ruozedata001 ~]# cat ~/.ssh/id_rsa.pub2 >> ~/.ssh/authorized_keys
[root@ruozedata001 ~]# cat ~/.ssh/id_rsa.pub3 >> ~/.ssh/authorized_keys

[root@ruozedata001 ~]# chmod 0600 ~/.ssh/authorized_keys
[root@ruozedata001 ~]# scp ~/.ssh/authorized_keys root@ruozedata002:/root/.ssh/
[root@ruozedata001 ~]# scp ~/.ssh/authorized_keys root@ruozedata003:/root/.ssh/

[root@ruozedata002 ~]# chown root:root ~/.ssh/authorized_keys
[root@ruozedata002 ~]# chmod 0600 ~/.ssh/authorized_keys
[root@ruozedata003 ~]# chown root:root ~/.ssh/authorized_keys
[root@ruozedata003 ~]# chmod 0600 ~/.ssh/authorized_keys

# 验证
ssh ruozedata001 date
ssh ruozedata002 date
ssh ruozedata003 date


[root@ruozedata001 ~]# cd ~
[root@ruozedata001 ~]# mkdir tmp sourcecode software shell log lib data app


四、部署JDK
[root@ruozedata001 ~]# mkdir  /usr/java
[root@ruozedata001 ~]# tar -xvf ~/software/jdk-8u181-linux-x64.tar.gz -C /usr/java
[root@ruozedata001 ~]# cd /usr/java
[root@ruozedata001 java]# chown -R root:root jdk1.8.0_181/
[root@ruozedata001 java]# scp -r jdk1.8.0_181 root@ruozedata002:/usr/java/
[root@ruozedata001 java]# scp -r jdk1.8.0_181 root@ruozedata003:/usr/java/

[root@ruozedata001 java]# echo -e '# JAVA ENV\nexport JAVA_HOME=/usr/java/jdk1.8.0_181\nexport PATH=$JAVA_HOME/bin:$PATH' >>/etc/profile
[root@ruozedata001 java]# source /etc/profile
[root@ruozedata001 java]# which java
/usr/java/jdk1.8.0_181/bin/java

五、部署MySQL
[root@ruozedata001 java]# cd
[root@ruozedata001 ~]# cd /usr/local/
[root@ruozedata001 local]# tar -xvf ~/software/mysql-5.7.26-el7-x86_64.tar.gz -C /usr/local
[root@ruozedata001 local]# mv mysql-5.7.26-el7-x86_64 mysql
[root@ruozedata001 local]# mkdir mysql/arch mysql/data mysql/tmp
[root@ruozedata001 local]# cp /etc/my.cnf /usr/local/my.cnf.bak
[root@ruozedata001 local]# vi /etc/my.cnf
[client]

port            = 3306

socket          = /usr/local/mysql/data/mysql.sock

default-character-set=utf8mb4

[mysqld]

port            = 3306

socket          = /usr/local/mysql/data/mysql.sock

skip-slave-start

skip-external-locking

key_buffer_size = 256M

sort_buffer_size = 2M

read_buffer_size = 2M

read_rnd_buffer_size = 4M

query_cache_size= 32M

max_allowed_packet = 16M

myisam_sort_buffer_size=128M

tmp_table_size=32M

table_open_cache = 512

thread_cache_size = 8

wait_timeout = 86400

interactive_timeout = 86400

max_connections = 600

# Try number of CPU's*2 for thread_concurrency

#thread_concurrency = 32

#isolation level and default engine

default-storage-engine = INNODB

transaction-isolation = READ-COMMITTED

server-id  = 1739

basedir    = /usr/local/mysql

datadir    = /usr/local/mysql/data

pid-file    = /usr/local/mysql/data/hostname.pid

#open performance schema

log-warnings

sysdate-is-now

binlog_format = ROW

log_bin_trust_function_creators=1

log-error  = /usr/local/mysql/data/hostname.err

log-bin = /usr/local/mysql/arch/mysql-bin

expire_logs_days = 7

innodb_write_io_threads=16

relay-log  = /usr/local/mysql/relay_log/relay-log

relay-log-index = /usr/local/mysql/relay_log/relay-log.index

relay_log_info_file= /usr/local/mysql/relay_log/relay-log.info

log_slave_updates=1

gtid_mode=OFF

enforce_gtid_consistency=OFF

# slave

slave-parallel-type=LOGICAL_CLOCK

slave-parallel-workers=4

master_info_repository=TABLE

relay_log_info_repository=TABLE

relay_log_recovery=ON

#other logs

#general_log =1

#general_log_file  = /usr/local/mysql/data/general_log.err

#slow_query_log=1

#slow_query_log_file=/usr/local/mysql/data/slow_log.err

#for replication slave

sync_binlog = 500

#for innodb options

innodb_data_home_dir = /usr/local/mysql/data/

innodb_data_file_path = ibdata1:1G;ibdata2:1G:autoextend

innodb_log_group_home_dir = /usr/local/mysql/arch

innodb_log_files_in_group = 4

innodb_log_file_size = 1G

innodb_log_buffer_size = 200M

#根据生产需要，调整pool size

innodb_buffer_pool_size = 2G

#innodb_additional_mem_pool_size = 50M #deprecated in 5.6

tmpdir = /usr/local/mysql/tmp

innodb_lock_wait_timeout = 1000

#innodb_thread_concurrency = 0

innodb_flush_log_at_trx_commit = 2

innodb_locks_unsafe_for_binlog=1

#innodb io features: add for mysql5.5.8

performance_schema

innodb_read_io_threads=4

innodb-write-io-threads=4

innodb-io-capacity=200

#purge threads change default(0) to 1 for purge

innodb_purge_threads=1

innodb_use_native_aio=on

#case-sensitive file names and separate tablespace

innodb_file_per_table = 1

lower_case_table_names=1

[mysqldump]

quick

max_allowed_packet = 128M

[mysql]

no-auto-rehash

default-character-set=utf8mb4

[mysqlhotcopy]

interactive-timeout

[myisamchk]

key_buffer_size = 256M

sort_buffer_size = 256M

read_buffer = 2M

write_buffer = 2M

# 创建用户组及用户
[root@ruozedata001 local]# groupadd -g 101 dba
[root@ruozedata001 local]# useradd -u 514 -g dba -G root -d /usr/local/mysql mysqladmin
useradd: warning: the home directory already exists.
Not copying any file from skel directory into it.
[root@ruozedata001 local]# id mysqladmin
uid=514(mysqladmin) gid=101(dba) groups=101(dba),0(root)

# copy 环境变量配置文件至mysqladmin用户的home目录中,为了以下步骤配置个人环境变量
[root@ruozedata001 local]# cp /etc/skel/.* /usr/local/mysql 

[root@ruozedata001 local]# vi mysql/.bashrc

export MYSQL_BASE=/usr/local/mysql
export PATH=${MYSQL_BASE}/bin:$PATH
unset USERNAME
#stty erase ^H
set umask to 022
umask 022
PS1=`uname -n`":"'$USER'":"'$PWD'":>"; export PS1

## end

[root@ruozedata001 local]# chown  mysqladmin:dba /etc/my.cnf
[root@ruozedata001 local]# chmod  640 /etc/my.cnf 
[root@ruozedata001 local]# chown -R mysqladmin:dba /usr/local/mysql
[root@ruozedata001 local]# chmod -R 755 /usr/local/mysql

# 设置开机自启
[root@ruozedata001 local]# cd /usr/local/mysql
[root@ruozedata001 mysql]# cp support-files/mysql.server /etc/rc.d/init.d/mysql
[root@ruozedata001 mysql]# chmod +x /etc/rc.d/init.d/mysql
[root@ruozedata001 mysql]# chkconfig --del mysql
[root@ruozedata001 mysql]# chkconfig --add mysql
[root@ruozedata001 mysql]# chkconfig --level 345 mysql on
[root@ruozedata001 mysql]#  vi /etc/rc.local
#!/bin/bash
# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES
#
# It is highly advisable to create own systemd services or udev rules
# to run scripts during boot instead of using this file.
#
# In contrast to previous versions due to parallel execution during boot
# this script will NOT be run after all other services.
#
# Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure
# that this script will be executed during boot.

touch /var/lock/subsys/local

su - mysqladmin -c "/etc/init.d/mysql start --federated"


[root@ruozedata001 mysql]# yum -y install libaio

# 初始化
[root@ruozedata001 mysql]# su - mysqladmin
ruozedata001:mysqladmin:/usr/local/mysql:>bin/mysqld \
> --defaults-file=/etc/my.cnf \
> --user=mysqladmin \
> --basedir=/usr/local/mysql/ \
> --datadir=/usr/local/mysql/data/ \
> --initialize

# 查看临时密码
ruozedata001:mysqladmin:/usr/local/mysql:>cd /usr/local/mysql/data
ruozedata001:mysqladmin:/usr/local/mysql/data:>cat hostname.err |grep password
2020-10-20T02:54:59.284863Z 1 [Note] A temporary password is generated for root@localhost: 7h2x4gNW?rxj


# 启动
ruozedata001:mysqladmin:/usr/local/mysql/data:>/usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf &
ruozedata001:mysqladmin:/usr/local/mysql/data:>cd /usr/local/mysql/bin
ruozedata001:mysqladmin:/usr/local/mysql/bin:>mysql -uroot -p'7h2x4gNW?rxj'
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.26-log

Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> alter user root@localhost identified by 'root';
Query OK, 0 rows affected (0.00 sec)

mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> flush privileges;
Query OK, 0 rows affected (0.00 sec)

mysql> exit;
Bye
ruozedata001:mysqladmin:/usr/local/mysql/bin:>service mysql restart
Shutting down MySQL..2020-10-20T02:58:24.721775Z mysqld_safe mysqld from pid file /usr/local/mysql/data/hostname.pid ended
[  OK  ]
Starting MySQL.[  OK  ]
[1]+  Done                    /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf  (wd: ~/data)
(wd now: ~/bin)
ruozedata001:mysqladmin:/usr/local/mysql/bin:>mysql -uroot -proot
mysql: [Warning] Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.26-log MySQL Community Server (GPL)

Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>

六、部署CDH

6.1、关闭防火墙，清空防火墙拦截规则
[root@ruozedata001 ~]# systemctl stop firewalld
[root@ruozedata001 ~]# systemctl disable firewalld
[root@ruozedata001 ~]# iptables -F 

6.2、关闭selinux
[root@ruozedata001 ~]# vim /etc/selinux/config 
SELINUX=disabled

6.3、时区、时钟的同步(云主机不用考虑这一步，过)

6.4、部署python(CDH需要python2.7，云主机自带，过)

6.5、创建cmf 和 amon的 db 和 user
[root@ruozedata001 ~]# su - mysqladmin
Last login: Tue Oct 20 10:53:16 CST 2020 on pts/0
ruozedata001:mysqladmin:/usr/local/mysql:>mysql -uroot -proot

mysql> create database cmf default character set utf8;
Query OK, 1 row affected (0.00 sec)

mysql> grant all privileges on cmf.* to cmf@'%' identified by 'Ruozedata0123!';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> create database amon default character set utf8;
Query OK, 1 row affected (0.00 sec)

mysql> grant all privileges on amon.* to amon@'%' identified by 'Ruozedata0123!';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> create database hive default character set utf8;
Query OK, 1 row affected (0.00 sec)

mysql> grant all privileges on hive.* to hive@'%' identified by 'Ruozedata0123!';
Query OK, 0 rows affected, 1 warning (0.01 sec)

mysql> flush privileges;
Query OK, 0 rows affected (0.00 sec)

6.6、拷贝MySQL jdbc jar
[root@ruozedata001 ~]# mkdir -p /usr/share/java
[root@ruozedata001 ~]# cp ~/lib/mysql-connector-java-5.1.47.jar /usr/share/java/mysql-connector-java.jar

[root@ruozedata002 etc]# cd
[root@ruozedata002 ~]# mkdir -p /usr/share/java
[root@ruozedata001 cloudera-scm-server]# scp ~/lib/mysql-connector-java-5.1.47.jar ruozedata002:/usr/share/java
[root@ruozedata002 java]# mv mysql-connector-java-5.1.47.jar mysql-connector-java.jar


6.7、拷贝安装包到/tmp目录并分发
[root@ruozedata001 ~]# cp ~/software/cloudera-manager-centos7-cm5.16.2_x86_64.tar.gz /tmp
[root@ruozedata001 ~]# scp /tmp/cloudera-manager-centos7-cm5.16.2_x86_64.tar.gz ruozedata002:/tmp/
[root@ruozedata001 ~]# scp /tmp/cloudera-manager-centos7-cm5.16.2_x86_64.tar.gz ruozedata003:/tmp/

[root@ruozedata001 ~]# cd /tmp
[root@ruozedata001 tmp]# mkdir /opt/cloudera-manager
[root@ruozedata001 tmp]# tar -xvf /tmp/cloudera-manager-centos7-cm5.16.2_x86_64.tar.gz -C /opt/cloudera-manager

[root@ruozedata001 tmp]# cd /opt/cloudera-manager
[root@ruozedata001 cloudera-manager]# cd cm-5.16.2
[root@ruozedata001 cm-5.16.2]# cd etc/
[root@ruozedata001 etc]# ll
total 20
drwxr-xr-x 2 1106 4001 4096 May 18  2019 cloudera-scm-agent
drwxr-xr-x 2 1106 4001 4096 May 18  2019 cloudera-scm-server
drwxr-xr-x 2 1106 4001 4096 May 18  2019 default
drwxr-xr-x 2 1106 4001 4096 May 18  2019 init.d
drwxr-xr-x 3 1106 4001 4096 May 18  2019 security

[root@ruozedata003 etc]# vim cloudera-scm-agent/config.ini
server_host=ruozedata001

[root@ruozedata001 etc]# vim cloudera-scm-server/db.properties 
com.cloudera.cmf.db.host=ruozedata001
com.cloudera.cmf.db.name=cmf
com.cloudera.cmf.db.user=cmf
com.cloudera.cmf.db.password=Ruozedata0123!
com.cloudera.cmf.db.setupType=EXTERNAL
创建用户
[root@ruozedata003 etc]# useradd --system --home=/opt/cloudera-manager/cm-5.16.2/run/cloudera-scm-server --no-create-home \
> --shell=/bin/false --comment "cloudera scm user" cloudera-scm
[root@ruozedata003 etc]# chown -R cloudera-scm:cloudera-scm /opt/cloudera-manager

Parcel离线部署
*************************************下面的这些步骤只需要在ruozedata001上操作***********************************
[root@ruozedata001 etc]# cp -r ~/software/CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel* /opt/cloudera/parcel-repo
[root@ruozedata001 etc]# cp ~/software/manifest.json /opt/cloudera/parcel-repo
[root@ruozedata001 etc]# cd /opt/cloudera/parcel-repo
[root@ruozedata001 parcel-repo]# ll
total 2082872
-rw-r--r-- 1 root root 2132782197 Oct 20 11:58 CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel
-rw-r--r-- 1 root root         41 Oct 20 11:58 CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha1
-rw-r--r-- 1 root root      66804 Oct 20 11:59 manifest.json
[root@ruozedata001 parcel-repo]# mv  CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha1  CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha
[root@ruozedata001 parcel-repo]# cat  CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel.sha
eec004b83305131a1982bb36f1ae2be54b6ef0d6
[root@ruozedata001 parcel-repo]# sha1sum CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel
eec004b83305131a1982bb36f1ae2be54b6ef0d6  CDH-5.16.2-1.cdh5.16.2.p0.8-el7.parcel
[root@ruozedata001 parcel-repo]# 
[root@ruozedata001 parcel-repo]# chown -R cloudera-scm:cloudera-scm /opt/cloudera
*************************************上面的这些步骤只需要在ruozedata001上操作***********************************
# 正式集群部署
1.创建所有节点的软件安装目录 用户和用户组的权限
[root@ruozedata001 parcel-repo]# mkdir -p /opt/cloudera/parcels
[root@ruozedata001 parcel-repo]# chown -R cloudera-scm:cloudera-scm /opt/cloudera

2.启动cm server
[root@ruozedata001 parcel-repo]# cd /opt/cloudera-manager/cm-5.16.2/etc/init.d/
[root@ruozedata001 init.d]# /opt/cloudera-manager/cm-5.16.2/etc/init.d/cloudera-scm-server start


[root@ruozedata001 init.d]# cd /opt/cloudera-manager/cm-5.16.2/log/cloudera-scm-server/
[root@ruozedata001 cloudera-scm-server]# ll
total 196
-rw-r----- 1 root root  54332 Oct 20 12:04 cloudera-scm-server.log
-rw-r--r-- 1 root root 139457 Oct 20 12:04 cloudera-scm-server.out
-rw-r----- 1 root root      0 Oct 20 12:04 cmf-server-perf.log
[root@ruozedata001 cloudera-scm-server]# tail -f cloudera-scm-server.log



# 启动所有节点的agent
[root@ruozedata001 cloudera-scm-server]# /opt/cloudera-manager/cm-5.16.2/etc/init.d/cloudera-scm-agent start

[root@ruozedata001 cloudera-scm-server]# /opt/cloudera-manager/cm-5.16.2/etc/init.d/cloudera-scm-agent status


# 关闭大页面

[root@ruozedata001 cloudera-scm-server]# echo never > /sys/kernel/mm/transparent_hugepage/defrag
[root@ruozedata001 cloudera-scm-server]# echo never > /sys/kernel/mm/transparent_hugepage/enabled


# Hive建表

[root@ruozedata003 etc]# hive
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512M; support was removed in 8.0
Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512M; support was removed in 8.0

Logging initialized using configuration in jar:file:/opt/cloudera/parcels/CDH-5.16.2-1.cdh5.16.2.p0.8/jars/hive-common-1.1.0-cdh5.16.2.jar!/hive-log4j.properties
WARNING: Hive CLI is deprecated and migration to Beeline is recommended.
hive> create database ruozedata;
OK
Time taken: 0.63 seconds
hive> create table ruozedata.test_spark(id int ,name string) row format delimited fields terminated by ',';
OK
Time taken: 0.253 seconds
hive> load data local inpath '/root/data/test_spark.txt' into table ruozedata.test_spark;
hive> select * from ruozedata.test_spark;

七、部署spark
[root@ruozedata001 ~]# cd 
[root@ruozedata001 ~]# tar -xvf ~/software/spark-2.4.6-bin-2.6.0-cdh5.16.2.tgz -C ~/app/
[root@ruozedata001 ~]# cd app/
[root@ruozedata001 app]# ln -s spark-2.4.6-bin-2.6.0-cdh5.16.2 spark
[root@ruozedata001 app]# cd ~/app/spark/conf/

[root@ruozedata001 conf]# cp spark-defaults.conf.template spark-defaults.conf
[root@ruozedata001 conf]# cp spark-env.sh.template spark-env.sh
[root@ruozedata001 conf]# cp slaves.template slaves

[root@ruozedata001 conf]# vim spark-env.sh
SPARK_LOCAL_IP=ruozedata001
HADOOP_CONF_DIR=/etc/hadoop/conf

[root@ruozedata001 conf]# vim slaves
ruozedata001
ruozedata002
ruozedata003

[root@ruozedata001 ~]# scp -r ~/app/spark-2.4.6-bin-2.6.0-cdh5.16.2 ruozedata002:/root/app/
[root@ruozedata001 ~]# scp -r ~/app/spark-2.4.6-bin-2.6.0-cdh5.16.2 ruozedata003:/root/app/

[root@ruozedata001 conf]# ln -s /etc/hive/conf/hive-site.xml hive-site.xml

[root@ruozedata001 conf]# echo -e '# SPARK ENV\nexport SPARK_HOME=/root/app/spark\nexport PATH=$SPARK_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata001 conf]# source /etc/profile

[root@ruozedata003 ~]# spark-sql --master yarn
spark-sql> select * from ruozedata.test_spark;
20/10/20 13:41:56 INFO scheduler.TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 5421 ms on ruozedata002 (executor 2) (2/2)
20/10/20 13:41:56 INFO cluster.YarnScheduler: Removed TaskSet 0.0, whose tasks have all completed, from pool 
20/10/20 13:41:56 INFO scheduler.DAGScheduler: ResultStage 0 (processCmd at CliDriver.java:376) finished in 5.513 s
20/10/20 13:41:56 INFO scheduler.DAGScheduler: Job 0 finished: processCmd at CliDriver.java:376, took 5.579704 s
1       ruoze
2       pk
3       xingxing
4       jepson
5       ruozedata
Time taken: 7.565 seconds, Fetched 5 row(s)
20/10/20 13:41:56 INFO thriftserver.SparkSQLCLIDriver: Time taken: 7.565 seconds, Fetched 5 row(s)

八、配置Azkaban

[root@ruozedata003 ~]# tar -xvf ~/software/azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz -C ~/app/
[root@ruozedata003 ~]# tar -xvf ~/software/azkaban-web-server-0.1.0-SNAPSHOT.tar.gz -C ~/app/

# 在 ruozedata001上解压db压缩包 因为MySQL在ruozedata001上
[root@ruozedata001 ~]# cd ~/software/
[root@ruozedata001 software]# tar -xvf azkaban-db-0.1.0-SNAPSHOT.tar.gz 
[root@ruozedata001 software]# ll /root/software/azkaban-db-0.1.0-SNAPSHOT | grep create-all-sql-0.1.0-SNAPSHOT.sql
-rw-r--r-- 1 root root 14347 Aug 20 21:10 create-all-sql-0.1.0-SNAPSHOT.sql

# 创建Azkaban元数据库
[root@ruozedata001 software]# su - mysqladmin
Last login: Tue Oct 20 13:28:27 CST 2020 on pts/0
ruozedata001:mysqladmin:/usr/local/mysql:>mysql -uroot -proot
mysql> create database azkaban default character set utf8;
Query OK, 1 row affected (0.00 sec)

mysql> grant all privileges on azkaban.* to azkaban@'%' identified by 'Ruozedata0123!';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> flush privileges;
Query OK, 0 rows affected (0.00 sec)

mysql> use azkaban
Database changed
mysql> source /root/software/azkaban-db-0.1.0-SNAPSHOT/create-all-sql-0.1.0-SNAPSHOT.sql

# 配置Azkaban的Executor和Web
[root@ruozedata003 ~]# cd ~/app/
[root@ruozedata003 app]# ln -s azkaban-exec-server-0.1.0-SNAPSHOT azkaban-exec-server
[root@ruozedata003 app]# ln -s azkaban-web-server-0.1.0-SNAPSHOT azkaban-web-server

配置Azkaban Executor
[root@ruozedata003 app]# vim azkaban-exec-server/conf/azkaban.properties 
azkaban.name=tianyafu_azkaban
azkaban.label=this is my azkaban
default.timezone.id=Asia/Shanghai
azkaban.webserver.url=http://ruozedata003:8081
database.type=mysql
mysql.port=3306
mysql.host=ruozedata001
mysql.database=azkaban
mysql.user=azkaban
mysql.password=Ruozedata0123!
executor.port=12321
[root@ruozedata003 app]# vim azkaban-exec-server/plugins/jobtypes/commonprivate.properties
# add by tianyafu
azkaban.native.lib=false

[root@ruozedata003 app]# mkdir azkaban-exec-server/logs azkaban-exec-server/extlib


配置Azkaban Web
[root@ruozedata003 app]# vim azkaban-web-server/conf/azkaban.properties
azkaban.name=tianyafu_azkaban
azkaban.label=this is my azkaban
default.timezone.id=Asia/Shanghai
database.type=mysql
mysql.port=3306
mysql.host=ruozedata001
mysql.database=azkaban
mysql.user=azkaban
mysql.password=Ruozedata0123!

[root@ruozedata003 app]# mkdir azkaban-web-server/logs azkaban-web-server/extlib azkaban-web-server/plugins azkaban-web-server/temp

# 配置ruozedata003上的环境变量
[root@ruozedata003 azkaban-exec-server]# echo -e '# AZKABAN EXECUTOR ENV\nexport AZKABAN_EXECUTOR_HOME=/root/app/azkaban-exec-server\nexport PATH=$AZKABAN_EXECUTOR_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata003 azkaban-exec-server]# echo -e '# AZKABAN WEB ENV\nexport AZKABAN_WEB_HOME=/root/app/azkaban-web-server\nexport PATH=$AZKABAN_WEB_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata003 azkaban-exec-server]# source /etc/profile

# 配置第三方插件
[root@ruozedata003 ~]# cd ~/software/
[root@ruozedata003 software]# tar -xvf azkaban-jobtype-3.0.0.tar.gz 
[root@ruozedata003 software]# cd $AZKABAN_EXECUTOR_HOME/plugins/jobtypes
[root@ruozedata003 jobtypes]# mv commonprivate.properties commonprivate.properties.bak
[root@ruozedata003 jobtypes]# mv  ~/software/azkaban-jobtype-3.0.0/* ~/app/azkaban-exec-server/plugins/jobtypes/

[root@ruozedata003 jobtypes]# vim common.properties 
# add by tianyafu
hadoop.home=/opt/cloudera/parcels/CDH/lib/hadoop
hive.home=/opt/cloudera/parcels/CDH/lib/hive
spark.home=/root/app/spark
azkaban.should.proxy=false

[root@ruozedata003 jobtypes]# vim commonprivate.properties
# add by tianyafu
azkaban.native.lib=
execute.as.user=false
azkaban.should.proxy=false
obtain.binary.token=false
hadoop.home=/opt/cloudera/parcels/CDH/lib/hadoop
hive.home=/opt/cloudera/parcels/CDH/lib/hive
spark.home=/root/app/spark
hadoop.classpath=${hadoop.home}/etc/hadoop,${hadoop.home}/client/*,${hive.home}/lib/*,${hive.home}/auxlib/*
jobtype.global.classpath=${hadoop.home}/etc/hadoop,${hadoop.home}/client/*,${hive.home}/lib/*,${hive.home}/auxlib/*

[root@ruozedata003 jobtypes]# vim hive/plugin.properties 
# add by tianyafu
hive.home=/opt/cloudera/parcels/CDH/lib/hive
hive.aux.jars.path=${hive.home}/auxlib

[root@ruozedata003 jobtypes]# vim hive/private.properties
# add by tianyafu
hive.aux.jar.path=${hive.home}/auxlib
hadoop.home=/opt/cloudera/parcels/CDH/lib/hadoop
hive.home=/opt/cloudera/parcels/CDH/lib/hive
jobtype.classpath=${hadoop.home}/etc/hadoop,${hadoop.home}/client/*,${hive.home}/lib/*,${hive.home}/conf,${hive.aux.jar.path}/*


修改启动脚本，防止日志到处都是
[root@ruozedata003 app]# vim ~/app/azkaban-exec-server/bin/start-exec.sh 
#!/bin/bash

script_dir=$(dirname $0)

# pass along command line arguments to the internal launch script.
#${script_dir}/internal/internal-start-executor.sh "$@" >executorServerLog__`date +%F+%T`.out 2>&1 &
${script_dir}/internal/internal-start-executor.sh "$@" >${script_dir}/../logs/executorServerLog__`date +%F+%T`.out 2>&1 &

[root@ruozedata003 app]# vim ~/app/azkaban-web-server/bin/start-web.sh
#!/bin/bash

script_dir=$(dirname $0)

#${script_dir}/internal/internal-start-web.sh >webServerLog_`date +%F+%T`.out 2>&1 &
${script_dir}/internal/internal-start-web.sh >${script_dir}/../logs/webServerLog_`date +%F+%T`.out 2>&1 &


# 分发azkaban executor到ruozedata001和ruozedata002上

[root@ruozedata003 app]# scp -r azkaban-exec-server-0.1.0-SNAPSHOT ruozedata001:/root/app/
[root@ruozedata003 app]# scp -r azkaban-exec-server-0.1.0-SNAPSHOT ruozedata002:/root/app/

[root@ruozedata001 ~]# cd app/
[root@ruozedata001 app]# ln -s azkaban-exec-server-0.1.0-SNAPSHOT azkaban-exec-server
[root@ruozedata001 app]# echo -e '# AZKABAN EXECUTOR ENV\nexport AZKABAN_EXECUTOR_HOME=/root/app/azkaban-exec-server\nexport PATH=$AZKABAN_EXECUTOR_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata001 app]# source /etc/profile

[root@ruozedata002 ~]# cd app/
[root@ruozedata002 app]# ln -s azkaban-exec-server-0.1.0-SNAPSHOT azkaban-exec-server
[root@ruozedata002 app]# echo -e '# AZKABAN EXECUTOR ENV\nexport AZKABAN_EXECUTOR_HOME=/root/app/azkaban-exec-server\nexport PATH=$AZKABAN_EXECUTOR_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata002 app]# source /etc/profile


20190101

启动
[root@ruozedata003 app]# cd $AZKABAN_EXECUTOR_HOME
[root@ruozedata003 azkaban-exec-server]# ./bin/start-exec.sh
curl -G "ruozedata001:12321/executor?action=activate" && echo
curl -G "ruozedata002:12321/executor?action=activate" && echo
curl -G "ruozedata003:12321/executor?action=activate" && echo

[root@ruozedata003 azkaban-exec-server]# cd $AZKABAN_WEB_HOME
[root@ruozedata003 azkaban-web-server]# ./bin/start-web.sh

关闭

[root@ruozedata003 azkaban-web-server]# cd $AZKABAN_WEB_HOME
[root@ruozedata003 azkaban-web-server]# ./bin/shutdown-web.sh 

[root@ruozedata003 azkaban-web-server]# cd $AZKABAN_EXECUTOR_HOME
[root@ruozedata003 azkaban-exec-server]# ./bin/shutdown-exec.sh


# 针对azkaban找不到hadoop等相关jar的问题

在/internal/internal-start-web.sh 中添加:
[root@ruozedata003 azkaban-exec-server]# vim $AZKABAN_EXECUTOR_HOME/bin/internal/internal-start-executor.sh
if [ "$HADOOP_CLASSPATH" != "" ]; then
        echo "Using HADOOP CLASSPATH from $HADOOP_CLASSPATH"
        CLASSPATH=$CLASSPATH:$HADOOP_CLASSPATH
fi

[root@ruozedata003 azkaban-exec-server]# vim /etc/profile
# HADOOP ENV
export HADOOP_HOME=/opt/cloudera/parcels/CDH/lib/hadoop
export PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH
export HADOOP_CONF_DIR=${HADOOP_HOME}/etc/hadoop
# HIVE ENV
export HIVE_HOME=/opt/cloudera/parcels/CDH/lib/hive
export PATH=$HIVE_HOME/bin:$PATH
# HADOOP_CLASSPATH
export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$HADOOP_HOME/lib/*:$HADOOP_HOME/client/*:$HIVE_HOME/lib/*:/root/lib/*

[root@ruozedata003 azkaban-exec-server]# source /etc/profile



九、安装Scala
[root@ruozedata001 ~]# tar -xvf ~/software/scala-2.12.10.tgz -C ~/app/
[root@ruozedata001 ~]# scp -r ~/app/scala-2.12.10 ruozedata002:/root/app/
[root@ruozedata001 ~]# scp -r ~/app/scala-2.12.10 ruozedata003:/root/app/
[root@ruozedata001 ~]# cd ~/app
[root@ruozedata001 app]# ln -s scala-2.12.10 scala
[root@ruozedata001 app]# echo -e '# SCALA ENV\nexport SCALA_HOME=/root/app/scala\nexport PATH=$SCALA_HOME/bin:$PATH' >> /etc/profile
[root@ruozedata001 app]# source /etc/profile

[root@ruozedata001 app]# source /etc/profile








